replicaCount: 1

type: DaemonSet

image:
  repository: czerwonk/ping_exporter
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v1.1.0"

imagePullSecrets: []
  # - name: my-image-pull-secret
nameOverride: ""
fullnameOverride: ""

networkPolicy:
  create: false

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podLabels: {}

# Rollout strategy, could be "Recreate" or "RollingUpdate"
strategy:
  type: RollingUpdate
  
psp:
  create: false

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  capabilities:
    add:
      - NET_RAW
    # drop:
    # - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 9427
  annotations: {}
  # prometheus.io/scrape: "true"
  # prometheus.io/port: "9427"

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# If you do want to specify resources, uncomment the following lines, adjust
# them as necessary, and remove the curly braces after 'resources:'.
resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

# Additional ping_exporter command line arguments.
args: []

# The 'config' block contains the contents of the YAML based config file.
config:
  targets:
    - 8.8.8.8
    - 8.8.4.4
    - 2001:4860:4860::8888
    - 2001:4860:4860::8844
    - google.com
    - host: www.facebook.com
      mylabel: testlabel

  dns:
    refresh: 2m15s
    nameserver: 1.1.1.1

  ping:
    interval: 2s
    timeout: 3s
    history-size: 42
    payload-size: 120

# Create either a PodMonitor or ServiceMonitor resource to be consumed by Prometheus Operator
monitoring:
  enabled: false
  type: PodMonitor
  relabelings:
  - action: labeldrop
    regex: pod
    sourceLabels: []
  - action: labeldrop
    regex: namespace
    sourceLabels: []
  - action: labeldrop
    regex: instance
    sourceLabels: []
  - action: labeldrop
    regex: job
    sourceLabels: []


# Create basic Prometheus alerting rules
prometheusRules:
  enabled: false

# add rbac to look up targets by service name
k8sresolver:
  create: false